#!/usr/bin/env ruby

class Blocklet
  def initialize(&block)
    @color = color(:default)
    @event_handlers = {}

    instance_eval(&block)

    # Handle mouse events
    unless ENV["BLOCK_BUTTON"].to_s.empty?
      button = ENV['BLOCK_BUTTON'].to_i
      x, y = ENV['BLOCK_X'].to_i, ENV['BLOCK_Y'].to_i

      @event_handlers[:mouse].call(button, x, y) unless @event_handlers[:mouse].nil?
    end

    puts self
  end

  def name
    return ENV["BLOCK_NAME"]
  end

  def instance
    return ENV["BLOCK_INSTANCE"]
  end

  def icon(s)
    @icon = s.chomp unless s.nil?
  end

  def text(s)
    @text = s.to_s.chomp
  end

  def color(s)
    @color = case s.to_s.chomp
             when "red"
               "#bf616a"
             when "yellow"
               "#ebcb8b"
             when "green"
               "#a3be8c"
             when /^#\w{6}$/
               @color = s.to_s.chomp
             else
               @color = "#a7adba"
             end
  end

  def on(event, &block)
    @event_handlers[event] = block
  end

  def to_s
    full_text = @icon.nil? ? @text : "#{@icon} #{@text}"
    short_text = full_text

    return full_text + "\n" + short_text + "\n" + @color
  end
end

blocklets_dir = "~/.config/i3blocks/blocklets"
blocklet_name = ARGV[0]
blocklet_path = "#{blocklets_dir}/#{blocklet_name}.rb"
if File.exist?(File.expand_path(blocklet_path))
  require blocklet_path
else
  abort "Blocklet #{blocklet_name} not found"
end
